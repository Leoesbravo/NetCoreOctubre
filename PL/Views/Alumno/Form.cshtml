@model ML.Alumno
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Form</h2>
    <div class="row">

        <div class="col-md-12">

            @using (Html.BeginForm("Form", "Alumno", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                <div class="form-horizontal">

                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-3">

                                @Html.LabelFor(model => model.IdAlumno, new { @class = "hidden" })

                                @Html.TextBoxFor(model => model.IdAlumno, new { @class = "hidden form-control" })

                                @Html.ValidationMessageFor(model => model.IdAlumno)
                            </div>
                           @*<div class="col-md-3">

                                @Html.LabelFor(model => model.Nombre)

                                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @placeholder = "Ejemplo:Leonardo" })

                                @Html.ValidationMessageFor(model => model.Nombre)

                            </div>*@
                                                <div class="col-md-3">
            @Html.LabelFor(model => model.Nombre)
            <div class="input-group mb-3">
                <span class="input-group-text"><i class="bi bi-controller"></i></span>
                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @placeholder="Ejemp: Eduardo", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Nombre, null, new { @class = "text-danger"})
            </div>
             </div>

                            <div class="col-md-3">

                                @Html.LabelFor(model => model.ApellidoPaterno)

                                @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @type = "password" })

                                @Html.ValidationMessageFor(model => model.ApellidoPaterno)

                            </div>
                            <div class="col-md-3">

                                @Html.LabelFor(model => model.ApellidoMaterno)

                                @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.ApellidoMaterno)

                            </div>
                        </div>

                    </div>

                    <div class="form-group">
                    </div>
                    <div class="form-group">
                    </div>
                    <div class="form-group">
                    </div>
                    <div class="form-group">

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.FechaNacimiento)

                            @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id="txtFechaNacimiento" })

                            @Html.ValidationMessageFor(model => model.FechaNacimiento)

                        </div>

                    </div>
                    <div class="form-group">

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Sexo)

                           @* @Html.TextBoxFor(model => model.Sexo, new { @class = "form-control" })*@
                           @Html.RadioButtonFor(model => model.Sexo,"H")
                           @Html.RadioButtonFor(model => model.Sexo,"M")

                            @Html.ValidationMessageFor(model => model.Sexo)

                        </div>

                    </div>

                    <div class="form-group">

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Semestre.IdSemestre)

                            @*@Html.TextBoxFor(model => model.Semestre.IdSemestre, new { @class = "form-control" })*@

                            @Html.DropDownListFor(model => model.Semestre.IdSemestre, new SelectList(Model.Semestre.Semestres, "IdSemestre", "Nombre"), "Selecciona una opción", new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Semestre.IdSemestre)

                        </div>
                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Horario.Grupo.Plantel.IdPlantel)

                            @Html.DropDownListFor(model => model.Horario.Grupo.Plantel.IdPlantel, new SelectList(Model.Horario.Grupo.Plantel.Planteles, "IdPlantel", "Nombre"), "Selecciona una opción", new { id = "ddlPlantel", @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Horario.Grupo.Plantel.IdPlantel)

                        </div>
                        <div class="col-md-3">

                            <div class="form-group">


                                @Html.LabelFor(model => model.Horario.Grupo)
                                @if (Model.Horario.Grupo.Grupos == null)
                                {
                                    @Html.DropDownListFor(model => model.Horario.Grupo.IdGrupo, new SelectList(string.Empty, "Value", "Text"), "Seleciona un grupo", htmlAttributes: new { id = "ddlGrupo", @class = "form-control" })
                                }

                                else
                                {
                                    @Html.DropDownListFor(model => model.Horario.Grupo.IdGrupo, new SelectList(Model.Horario.Grupo.Grupos, "IdGrupo", "Nombre"), "Seleciona un grupo", htmlAttributes: new { id = "ddlGrupo", @class = "form-control" })
                                }

                            </div>

                        </div>

                        <div class=" offset-md-12">

                            @Html.LabelFor(model=> model.Imagen)

                            <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-card-image"></i></span>
                                <input id="IFImage" type='file' class="form-control" name="IFImage" onchange="validateFile(this), readURL(this);  " />
                            </div>

                            @if (Model.Imagen != null)
                            {

                                <img id="Img" src="data:image/*;base64,@Model.Imagen" style="width:250px ; height:250px" />

                            }
                            else
                            {
                                <img id="Img" src="~/Imagenes/SinAlumno.png" style="width:250px ; height:250px" />
                            }


                        </div>
                        @Html.HiddenFor(model => model.Imagen)

                    </div>




                    <div class="form-group">

                        <div class="col-md-3">

                            <input type="submit" value="Guardar" class="btn btn-success" />

                            @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })

                        </div>

                    </div>

                </div>

            }

        </div>

    </div>
</div>
@section Scripts
{
<script src="~/lib/jquery/dist/jquery.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        $("#ddlPlantel").change(function () {
            $("#ddlGrupo").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetGrupo")',
                dataType: 'json',
                data: { IdPlantel: $("#ddlPlantel").val() },
                success: function (grupos) {
                    $("#ddlGrupo").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(grupos, function (i, grupos) {
                        $("#ddlGrupo").append('<option value="'
                            + grupos.IdGrupo + '">'
                            + grupos.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        })
    })
      function validateFile()
                {
                    var allowedExtension = ['jpeg', 'jpg'];
                    var fileExtension = document.getElementById('fuImage').value.split('.').pop().toLowerCase();
                    var isValidFile = false;

                        for(var index in allowedExtension) {

                            if(fileExtension === allowedExtension[index]) {
                                isValidFile = true;
                                break;
                            }
                        }

                        if(!isValidFile) {
                            alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
                            document.getElementById('fuImage').value = ""
                        }

                        return isValidFile;
                }
                   $( function() {
      $( "#txtFechaNacimiento" ).datepicker({dateFormat: 'dd-mm-yy',
                                  changeMonth: true,
                                  changeYear: true});
    } );

</script>
}
